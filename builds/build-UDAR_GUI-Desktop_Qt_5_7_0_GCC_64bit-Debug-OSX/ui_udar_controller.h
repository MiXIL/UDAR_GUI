/********************************************************************************
** Form generated from reading UI file 'udar_controller.ui'
**
** Created by: Qt User Interface Compiler version 5.7.0
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_UDAR_CONTROLLER_H
#define UI_UDAR_CONTROLLER_H

#include <QtCore/QVariant>
#include <QtWidgets/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QButtonGroup>
#include <QtWidgets/QCheckBox>
#include <QtWidgets/QComboBox>
#include <QtWidgets/QDoubleSpinBox>
#include <QtWidgets/QGroupBox>
#include <QtWidgets/QHeaderView>
#include <QtWidgets/QLabel>
#include <QtWidgets/QLineEdit>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QMenu>
#include <QtWidgets/QMenuBar>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QRadioButton>
#include <QtWidgets/QScrollBar>
#include <QtWidgets/QSpinBox>
#include <QtWidgets/QStatusBar>
#include <QtWidgets/QTabWidget>
#include <QtWidgets/QTextEdit>
#include <QtWidgets/QToolBar>
#include <QtWidgets/QWidget>
#include "../../qcustomplot.h"
#include "hexspinbox.h"

QT_BEGIN_NAMESPACE

class Ui_UDAR_Controller
{
public:
    QWidget *centralWidget;
    QGroupBox *groupBox;
    QTabWidget *tabWidget_a;
    QWidget *tab_a1;
    QLabel *label_6;
    QLabel *label_8;
    QLabel *label_9;
    QSpinBox *adcSamples_spinBox;
    QDoubleSpinBox *minFreq_dSpinBox;
    QDoubleSpinBox *chirpPRF_dSpinBox;
    QLabel *label_7;
    QDoubleSpinBox *chirpSlope_dSpinBox;
    QLabel *label_13;
    QDoubleSpinBox *chirpTime_dSpinBox;
    QDoubleSpinBox *chirpBW_dSpinBox;
    QLabel *label_12;
    QLabel *label_14;
    QDoubleSpinBox *clockFreq_dSpinBox;
    QLabel *label_15;
    QSpinBox *numSamples_spinBox;
    QSpinBox *phaseAccLen_spinBox;
    QLabel *label_16;
    QLabel *label_17;
    QLabel *label_18;
    QSpinBox *freqOffset_spinBox;
    QSpinBox *chirpTuningWord_spinBox;
    QPushButton *chirpParamsGenButton;
    QPushButton *chirpParamsResetButton;
    QCheckBox *dacLoopback_checkBox;
    QWidget *tab_a2;
    HexSpinBox *fmc150RegisterAddr_spinBox;
    QLabel *label_26;
    HexSpinBox *fmc150RegisterData_spinBox;
    QLabel *label_27;
    HexSpinBox *fmc150_Clk_iDelay_spinBox;
    QLabel *label_28;
    HexSpinBox *fmc150_CHA_Delay_spinBox;
    QLabel *label_29;
    HexSpinBox *fmc150_CHB_Delay_spinBox;
    QLabel *label_30;
    QLabel *label_31;
    QSpinBox *fmc150RegisterRW_spinbox;
    QLabel *label_32;
    QSpinBox *fmc150_CDCE72010_spinbox;
    QLabel *label_33;
    QSpinBox *fmc150_ADS62P49_spinbox;
    QLabel *label_34;
    QSpinBox *fmc150_DAC3283_spinbox;
    QLabel *label_35;
    QSpinBox *fmc150_AMC7823_spinbox;
    QRadioButton *fmc150_read_radioButton;
    QRadioButton *fmc150_write_radioButton;
    QRadioButton *fmc150_CDC_radioButton;
    QRadioButton *fmc150_ADS_radioButton;
    QRadioButton *fmc150_DAC_radioButton;
    QRadioButton *fmc150_AMC_radioButton;
    QWidget *tab_a3;
    QTabWidget *tabWidget_c;
    QWidget *tab_c1;
    QTextEdit *transcript;
    QPushButton *getThreadStatus;
    QPushButton *testButton;
    QLabel *label_10;
    QLabel *label_11;
    QLineEdit *addressWriteText;
    QLineEdit *commandWriteText;
    QPushButton *printExtBuf;
    QCheckBox *printHeaderCheckBox;
    QLineEdit *payloadWriteText;
    QLabel *label_25;
    QWidget *tab_c2;
    QCustomPlot *plotI;
    QScrollBar *verticalScrollBarQ;
    QScrollBar *horizontalScrollBarQ;
    QCustomPlot *plotI2;
    QWidget *tab_c3;
    QCustomPlot *plotQ;
    QScrollBar *verticalScrollBarI;
    QScrollBar *horizontalScrollBarI;
    QCustomPlot *plotQ2;
    QWidget *tab_c5;
    QCustomPlot *plotFFTI;
    QScrollBar *verticalScrollBarFFTI;
    QScrollBar *horizontalScrollBarFFTI;
    QCustomPlot *plotFFTI2;
    QWidget *tab_c6;
    QCustomPlot *plotFFTQ;
    QScrollBar *verticalScrollBarFFTQ;
    QScrollBar *horizontalScrollBarFFTQ;
    QCustomPlot *plotFFTQ2;
    QWidget *tab_c4;
    QCustomPlot *plotC;
    QScrollBar *verticalScrollBarC;
    QScrollBar *horizontalScrollBarC;
    QCustomPlot *plotC2;
    QTabWidget *tabWidget_b;
    QWidget *tab_2;
    QLineEdit *recOutputFilename;
    QCheckBox *pktRecordCheckBox;
    QLabel *label_22;
    QSpinBox *writeLimit_spinBox;
    QCheckBox *promiscModeCheckBox;
    QLineEdit *recOutputDirectory;
    QCheckBox *appendInterfaceCheckBox;
    QLabel *label_24;
    QLabel *label_23;
    QCheckBox *decodeCounterCheckBox;
    QWidget *tab;
    QRadioButton *injectReadCmd_radioButton;
    QRadioButton *injectWriteCmd_radioButton;
    QCheckBox *byteReorderCheckBox;
    QRadioButton *adc_data_u_radioButton;
    QRadioButton *dac_data_u_radioButton;
    QRadioButton *adc_counter_u_radioButton;
    QRadioButton *global_counter_u_radioButton;
    QRadioButton *adc_data_l_radioButton;
    QRadioButton *global_counter_l_radioButton;
    QRadioButton *adc_counter_l_radioButton;
    QRadioButton *dac_data_l_radioButton;
    QLabel *label_36;
    QLabel *label_37;
    QLabel *label_38;
    QWidget *tab_3;
    QLineEdit *srcIpAddr;
    QLineEdit *destIpAddr;
    QLineEdit *srcMacAddr;
    QLabel *label_2;
    QLabel *label;
    QLineEdit *destMacAddr;
    QLabel *label_4;
    QLabel *label_3;
    QWidget *tab_b2;
    QLineEdit *inputPcapFilename;
    QLineEdit *outputPcapFilename;
    QLineEdit *outputDirectory;
    QPushButton *readPcapButton;
    QLabel *label_19;
    QLabel *label_21;
    QLabel *label_20;
    QWidget *tab_b3;
    QLabel *label_5;
    QComboBox *networkInterfaces;
    QTextEdit *statusTranscript;
    QPushButton *killThread;
    QPushButton *listenButton;
    QPushButton *writeButton;
    QRadioButton *injectFmc150_radioButton;
    QRadioButton *injectChirp_radioButton;
    QPushButton *plotOutputButton;
    QMenuBar *menuBar;
    QMenu *menuUDAR_GUI;
    QToolBar *mainToolBar;
    QStatusBar *statusBar;
    QButtonGroup *buttonGroup_2;
    QButtonGroup *buttonGroup_3;
    QButtonGroup *buttonGroup_4;
    QButtonGroup *buttonGroup_5;
    QButtonGroup *buttonGroup_6;
    QButtonGroup *buttonGroup;

    void setupUi(QMainWindow *UDAR_Controller)
    {
        if (UDAR_Controller->objectName().isEmpty())
            UDAR_Controller->setObjectName(QStringLiteral("UDAR_Controller"));
        UDAR_Controller->resize(992, 748);
        UDAR_Controller->setStyleSheet(QStringLiteral("font: 10pt \".SF NS Text\";"));
        centralWidget = new QWidget(UDAR_Controller);
        centralWidget->setObjectName(QStringLiteral("centralWidget"));
        groupBox = new QGroupBox(centralWidget);
        groupBox->setObjectName(QStringLiteral("groupBox"));
        groupBox->setGeometry(QRect(10, 0, 969, 691));
        tabWidget_a = new QTabWidget(groupBox);
        tabWidget_a->setObjectName(QStringLiteral("tabWidget_a"));
        tabWidget_a->setGeometry(QRect(0, 8, 967, 179));
        tab_a1 = new QWidget();
        tab_a1->setObjectName(QStringLiteral("tab_a1"));
        label_6 = new QLabel(tab_a1);
        label_6->setObjectName(QStringLiteral("label_6"));
        label_6->setGeometry(QRect(452, 6, 81, 16));
        label_8 = new QLabel(tab_a1);
        label_8->setObjectName(QStringLiteral("label_8"));
        label_8->setGeometry(QRect(98, 8, 101, 16));
        label_9 = new QLabel(tab_a1);
        label_9->setObjectName(QStringLiteral("label_9"));
        label_9->setGeometry(QRect(562, 56, 111, 16));
        adcSamples_spinBox = new QSpinBox(tab_a1);
        adcSamples_spinBox->setObjectName(QStringLiteral("adcSamples_spinBox"));
        adcSamples_spinBox->setGeometry(QRect(572, 76, 91, 24));
        adcSamples_spinBox->setMaximum(999999);
        adcSamples_spinBox->setValue(200);
        minFreq_dSpinBox = new QDoubleSpinBox(tab_a1);
        minFreq_dSpinBox->setObjectName(QStringLiteral("minFreq_dSpinBox"));
        minFreq_dSpinBox->setGeometry(QRect(98, 28, 101, 24));
        minFreq_dSpinBox->setDecimals(6);
        minFreq_dSpinBox->setMaximum(1e+6);
        minFreq_dSpinBox->setValue(5);
        chirpPRF_dSpinBox = new QDoubleSpinBox(tab_a1);
        chirpPRF_dSpinBox->setObjectName(QStringLiteral("chirpPRF_dSpinBox"));
        chirpPRF_dSpinBox->setGeometry(QRect(452, 26, 111, 24));
        chirpPRF_dSpinBox->setDecimals(6);
        chirpPRF_dSpinBox->setMaximum(1e+6);
        chirpPRF_dSpinBox->setValue(10);
        label_7 = new QLabel(tab_a1);
        label_7->setObjectName(QStringLiteral("label_7"));
        label_7->setGeometry(QRect(218, 8, 111, 16));
        chirpSlope_dSpinBox = new QDoubleSpinBox(tab_a1);
        chirpSlope_dSpinBox->setObjectName(QStringLiteral("chirpSlope_dSpinBox"));
        chirpSlope_dSpinBox->setGeometry(QRect(228, 28, 91, 24));
        chirpSlope_dSpinBox->setDecimals(6);
        chirpSlope_dSpinBox->setMaximum(1e+9);
        chirpSlope_dSpinBox->setValue(10);
        label_13 = new QLabel(tab_a1);
        label_13->setObjectName(QStringLiteral("label_13"));
        label_13->setGeometry(QRect(238, 58, 81, 16));
        chirpTime_dSpinBox = new QDoubleSpinBox(tab_a1);
        chirpTime_dSpinBox->setObjectName(QStringLiteral("chirpTime_dSpinBox"));
        chirpTime_dSpinBox->setGeometry(QRect(238, 78, 81, 24));
        chirpTime_dSpinBox->setDecimals(3);
        chirpTime_dSpinBox->setMaximum(1e+9);
        chirpTime_dSpinBox->setValue(5);
        chirpBW_dSpinBox = new QDoubleSpinBox(tab_a1);
        chirpBW_dSpinBox->setObjectName(QStringLiteral("chirpBW_dSpinBox"));
        chirpBW_dSpinBox->setGeometry(QRect(98, 78, 101, 24));
        chirpBW_dSpinBox->setDecimals(6);
        chirpBW_dSpinBox->setMaximum(1e+6);
        chirpBW_dSpinBox->setValue(50);
        label_12 = new QLabel(tab_a1);
        label_12->setObjectName(QStringLiteral("label_12"));
        label_12->setGeometry(QRect(98, 58, 101, 16));
        label_14 = new QLabel(tab_a1);
        label_14->setObjectName(QStringLiteral("label_14"));
        label_14->setGeometry(QRect(702, 56, 91, 16));
        clockFreq_dSpinBox = new QDoubleSpinBox(tab_a1);
        clockFreq_dSpinBox->setObjectName(QStringLiteral("clockFreq_dSpinBox"));
        clockFreq_dSpinBox->setGeometry(QRect(570, 26, 81, 24));
        clockFreq_dSpinBox->setReadOnly(false);
        clockFreq_dSpinBox->setDecimals(3);
        clockFreq_dSpinBox->setMaximum(1000);
        clockFreq_dSpinBox->setSingleStep(61.44);
        clockFreq_dSpinBox->setValue(245.76);
        label_15 = new QLabel(tab_a1);
        label_15->setObjectName(QStringLiteral("label_15"));
        label_15->setGeometry(QRect(454, 58, 81, 16));
        numSamples_spinBox = new QSpinBox(tab_a1);
        numSamples_spinBox->setObjectName(QStringLiteral("numSamples_spinBox"));
        numSamples_spinBox->setGeometry(QRect(464, 78, 71, 24));
        numSamples_spinBox->setMaximum(1000000);
        numSamples_spinBox->setSingleStep(256);
        numSamples_spinBox->setValue(4096);
        phaseAccLen_spinBox = new QSpinBox(tab_a1);
        phaseAccLen_spinBox->setObjectName(QStringLiteral("phaseAccLen_spinBox"));
        phaseAccLen_spinBox->setGeometry(QRect(858, 30, 71, 24));
        phaseAccLen_spinBox->setReadOnly(false);
        phaseAccLen_spinBox->setMaximum(64);
        phaseAccLen_spinBox->setValue(16);
        label_16 = new QLabel(tab_a1);
        label_16->setObjectName(QStringLiteral("label_16"));
        label_16->setGeometry(QRect(848, 10, 101, 16));
        label_17 = new QLabel(tab_a1);
        label_17->setObjectName(QStringLiteral("label_17"));
        label_17->setGeometry(QRect(560, 6, 101, 16));
        label_18 = new QLabel(tab_a1);
        label_18->setObjectName(QStringLiteral("label_18"));
        label_18->setGeometry(QRect(710, 6, 91, 16));
        freqOffset_spinBox = new QSpinBox(tab_a1);
        freqOffset_spinBox->setObjectName(QStringLiteral("freqOffset_spinBox"));
        freqOffset_spinBox->setGeometry(QRect(710, 26, 81, 24));
        freqOffset_spinBox->setMaximum(999999);
        freqOffset_spinBox->setSingleStep(64);
        freqOffset_spinBox->setValue(768);
        chirpTuningWord_spinBox = new QSpinBox(tab_a1);
        chirpTuningWord_spinBox->setObjectName(QStringLiteral("chirpTuningWord_spinBox"));
        chirpTuningWord_spinBox->setGeometry(QRect(712, 76, 81, 24));
        chirpTuningWord_spinBox->setMaximum(999999);
        chirpTuningWord_spinBox->setValue(1);
        chirpParamsGenButton = new QPushButton(tab_a1);
        chirpParamsGenButton->setObjectName(QStringLiteral("chirpParamsGenButton"));
        chirpParamsGenButton->setGeometry(QRect(162, 106, 113, 32));
        chirpParamsResetButton = new QPushButton(tab_a1);
        chirpParamsResetButton->setObjectName(QStringLiteral("chirpParamsResetButton"));
        chirpParamsResetButton->setGeometry(QRect(650, 104, 113, 32));
        dacLoopback_checkBox = new QCheckBox(tab_a1);
        dacLoopback_checkBox->setObjectName(QStringLiteral("dacLoopback_checkBox"));
        dacLoopback_checkBox->setGeometry(QRect(830, 78, 127, 20));
        tabWidget_a->addTab(tab_a1, QString());
        tab_a2 = new QWidget();
        tab_a2->setObjectName(QStringLiteral("tab_a2"));
        fmc150RegisterAddr_spinBox = new HexSpinBox(tab_a2);
        fmc150RegisterAddr_spinBox->setObjectName(QStringLiteral("fmc150RegisterAddr_spinBox"));
        fmc150RegisterAddr_spinBox->setGeometry(QRect(170, 44, 87, 24));
        fmc150RegisterAddr_spinBox->setReadOnly(false);
        fmc150RegisterAddr_spinBox->setMaximum(429496730);
        fmc150RegisterAddr_spinBox->setValue(0);
        fmc150RegisterAddr_spinBox->setDisplayIntegerBase(16);
        label_26 = new QLabel(tab_a2);
        label_26->setObjectName(QStringLiteral("label_26"));
        label_26->setGeometry(QRect(160, 24, 101, 16));
        fmc150RegisterData_spinBox = new HexSpinBox(tab_a2);
        fmc150RegisterData_spinBox->setObjectName(QStringLiteral("fmc150RegisterData_spinBox"));
        fmc150RegisterData_spinBox->setGeometry(QRect(288, 42, 87, 24));
        fmc150RegisterData_spinBox->setReadOnly(false);
        fmc150RegisterData_spinBox->setMaximum(429496730);
        fmc150RegisterData_spinBox->setValue(0);
        fmc150RegisterData_spinBox->setDisplayIntegerBase(16);
        label_27 = new QLabel(tab_a2);
        label_27->setObjectName(QStringLiteral("label_27"));
        label_27->setGeometry(QRect(278, 22, 101, 16));
        fmc150_Clk_iDelay_spinBox = new HexSpinBox(tab_a2);
        fmc150_Clk_iDelay_spinBox->setObjectName(QStringLiteral("fmc150_Clk_iDelay_spinBox"));
        fmc150_Clk_iDelay_spinBox->setGeometry(QRect(52, 92, 87, 24));
        fmc150_Clk_iDelay_spinBox->setReadOnly(false);
        fmc150_Clk_iDelay_spinBox->setMaximum(429496730);
        fmc150_Clk_iDelay_spinBox->setValue(0);
        fmc150_Clk_iDelay_spinBox->setDisplayIntegerBase(16);
        label_28 = new QLabel(tab_a2);
        label_28->setObjectName(QStringLiteral("label_28"));
        label_28->setGeometry(QRect(42, 72, 101, 16));
        fmc150_CHA_Delay_spinBox = new HexSpinBox(tab_a2);
        fmc150_CHA_Delay_spinBox->setObjectName(QStringLiteral("fmc150_CHA_Delay_spinBox"));
        fmc150_CHA_Delay_spinBox->setGeometry(QRect(168, 90, 87, 24));
        fmc150_CHA_Delay_spinBox->setReadOnly(false);
        fmc150_CHA_Delay_spinBox->setMaximum(429496730);
        fmc150_CHA_Delay_spinBox->setValue(0);
        fmc150_CHA_Delay_spinBox->setDisplayIntegerBase(16);
        label_29 = new QLabel(tab_a2);
        label_29->setObjectName(QStringLiteral("label_29"));
        label_29->setGeometry(QRect(158, 70, 101, 16));
        fmc150_CHB_Delay_spinBox = new HexSpinBox(tab_a2);
        fmc150_CHB_Delay_spinBox->setObjectName(QStringLiteral("fmc150_CHB_Delay_spinBox"));
        fmc150_CHB_Delay_spinBox->setGeometry(QRect(286, 88, 87, 24));
        fmc150_CHB_Delay_spinBox->setReadOnly(false);
        fmc150_CHB_Delay_spinBox->setMaximum(429496730);
        fmc150_CHB_Delay_spinBox->setValue(0);
        fmc150_CHB_Delay_spinBox->setDisplayIntegerBase(16);
        label_30 = new QLabel(tab_a2);
        label_30->setObjectName(QStringLiteral("label_30"));
        label_30->setGeometry(QRect(276, 68, 101, 16));
        label_31 = new QLabel(tab_a2);
        label_31->setObjectName(QStringLiteral("label_31"));
        label_31->setGeometry(QRect(660, 6, 31, 16));
        fmc150RegisterRW_spinbox = new QSpinBox(tab_a2);
        fmc150RegisterRW_spinbox->setObjectName(QStringLiteral("fmc150RegisterRW_spinbox"));
        fmc150RegisterRW_spinbox->setGeometry(QRect(700, 0, 43, 24));
        fmc150RegisterRW_spinbox->setReadOnly(false);
        fmc150RegisterRW_spinbox->setMaximum(1);
        fmc150RegisterRW_spinbox->setValue(0);
        label_32 = new QLabel(tab_a2);
        label_32->setObjectName(QStringLiteral("label_32"));
        label_32->setGeometry(QRect(636, 26, 63, 16));
        fmc150_CDCE72010_spinbox = new QSpinBox(tab_a2);
        fmc150_CDCE72010_spinbox->setObjectName(QStringLiteral("fmc150_CDCE72010_spinbox"));
        fmc150_CDCE72010_spinbox->setGeometry(QRect(702, 26, 43, 24));
        fmc150_CDCE72010_spinbox->setReadOnly(false);
        fmc150_CDCE72010_spinbox->setMaximum(1);
        fmc150_CDCE72010_spinbox->setValue(0);
        label_33 = new QLabel(tab_a2);
        label_33->setObjectName(QStringLiteral("label_33"));
        label_33->setGeometry(QRect(636, 56, 63, 16));
        fmc150_ADS62P49_spinbox = new QSpinBox(tab_a2);
        fmc150_ADS62P49_spinbox->setObjectName(QStringLiteral("fmc150_ADS62P49_spinbox"));
        fmc150_ADS62P49_spinbox->setGeometry(QRect(700, 54, 43, 24));
        fmc150_ADS62P49_spinbox->setReadOnly(false);
        fmc150_ADS62P49_spinbox->setMaximum(1);
        fmc150_ADS62P49_spinbox->setValue(0);
        label_34 = new QLabel(tab_a2);
        label_34->setObjectName(QStringLiteral("label_34"));
        label_34->setGeometry(QRect(648, 80, 51, 16));
        fmc150_DAC3283_spinbox = new QSpinBox(tab_a2);
        fmc150_DAC3283_spinbox->setObjectName(QStringLiteral("fmc150_DAC3283_spinbox"));
        fmc150_DAC3283_spinbox->setGeometry(QRect(702, 76, 43, 24));
        fmc150_DAC3283_spinbox->setReadOnly(false);
        fmc150_DAC3283_spinbox->setMaximum(1);
        fmc150_DAC3283_spinbox->setValue(0);
        label_35 = new QLabel(tab_a2);
        label_35->setObjectName(QStringLiteral("label_35"));
        label_35->setGeometry(QRect(638, 104, 63, 16));
        fmc150_AMC7823_spinbox = new QSpinBox(tab_a2);
        fmc150_AMC7823_spinbox->setObjectName(QStringLiteral("fmc150_AMC7823_spinbox"));
        fmc150_AMC7823_spinbox->setGeometry(QRect(702, 100, 43, 24));
        fmc150_AMC7823_spinbox->setReadOnly(false);
        fmc150_AMC7823_spinbox->setMaximum(1);
        fmc150_AMC7823_spinbox->setValue(0);
        fmc150_read_radioButton = new QRadioButton(tab_a2);
        buttonGroup = new QButtonGroup(UDAR_Controller);
        buttonGroup->setObjectName(QStringLiteral("buttonGroup"));
        buttonGroup->addButton(fmc150_read_radioButton);
        fmc150_read_radioButton->setObjectName(QStringLiteral("fmc150_read_radioButton"));
        fmc150_read_radioButton->setGeometry(QRect(418, 74, 59, 20));
        fmc150_write_radioButton = new QRadioButton(tab_a2);
        buttonGroup->addButton(fmc150_write_radioButton);
        fmc150_write_radioButton->setObjectName(QStringLiteral("fmc150_write_radioButton"));
        fmc150_write_radioButton->setGeometry(QRect(420, 48, 59, 20));
        fmc150_write_radioButton->setChecked(true);
        fmc150_CDC_radioButton = new QRadioButton(tab_a2);
        buttonGroup_2 = new QButtonGroup(UDAR_Controller);
        buttonGroup_2->setObjectName(QStringLiteral("buttonGroup_2"));
        buttonGroup_2->addButton(fmc150_CDC_radioButton);
        fmc150_CDC_radioButton->setObjectName(QStringLiteral("fmc150_CDC_radioButton"));
        fmc150_CDC_radioButton->setGeometry(QRect(514, 24, 85, 20));
        fmc150_ADS_radioButton = new QRadioButton(tab_a2);
        buttonGroup_2->addButton(fmc150_ADS_radioButton);
        fmc150_ADS_radioButton->setObjectName(QStringLiteral("fmc150_ADS_radioButton"));
        fmc150_ADS_radioButton->setGeometry(QRect(514, 52, 85, 20));
        fmc150_DAC_radioButton = new QRadioButton(tab_a2);
        buttonGroup_2->addButton(fmc150_DAC_radioButton);
        fmc150_DAC_radioButton->setObjectName(QStringLiteral("fmc150_DAC_radioButton"));
        fmc150_DAC_radioButton->setGeometry(QRect(514, 76, 85, 20));
        fmc150_DAC_radioButton->setChecked(true);
        fmc150_AMC_radioButton = new QRadioButton(tab_a2);
        buttonGroup_2->addButton(fmc150_AMC_radioButton);
        fmc150_AMC_radioButton->setObjectName(QStringLiteral("fmc150_AMC_radioButton"));
        fmc150_AMC_radioButton->setGeometry(QRect(516, 100, 85, 20));
        tabWidget_a->addTab(tab_a2, QString());
        tab_a3 = new QWidget();
        tab_a3->setObjectName(QStringLiteral("tab_a3"));
        tabWidget_a->addTab(tab_a3, QString());
        tabWidget_c = new QTabWidget(groupBox);
        tabWidget_c->setObjectName(QStringLiteral("tabWidget_c"));
        tabWidget_c->setGeometry(QRect(10, 340, 953, 351));
        tab_c1 = new QWidget();
        tab_c1->setObjectName(QStringLiteral("tab_c1"));
        transcript = new QTextEdit(tab_c1);
        transcript->setObjectName(QStringLiteral("transcript"));
        transcript->setGeometry(QRect(10, 6, 459, 309));
        transcript->setStyleSheet(QStringLiteral("font: 10pt \"Menlo\";"));
        getThreadStatus = new QPushButton(tab_c1);
        getThreadStatus->setObjectName(QStringLiteral("getThreadStatus"));
        getThreadStatus->setGeometry(QRect(492, 50, 91, 32));
        testButton = new QPushButton(tab_c1);
        testButton->setObjectName(QStringLiteral("testButton"));
        testButton->setGeometry(QRect(682, 98, 121, 32));
        label_10 = new QLabel(tab_c1);
        label_10->setObjectName(QStringLiteral("label_10"));
        label_10->setGeometry(QRect(670, 10, 61, 16));
        label_11 = new QLabel(tab_c1);
        label_11->setObjectName(QStringLiteral("label_11"));
        label_11->setGeometry(QRect(762, 10, 63, 16));
        addressWriteText = new QLineEdit(tab_c1);
        addressWriteText->setObjectName(QStringLiteral("addressWriteText"));
        addressWriteText->setGeometry(QRect(670, 30, 75, 21));
        commandWriteText = new QLineEdit(tab_c1);
        commandWriteText->setObjectName(QStringLiteral("commandWriteText"));
        commandWriteText->setGeometry(QRect(762, 30, 35, 21));
        printExtBuf = new QPushButton(tab_c1);
        printExtBuf->setObjectName(QStringLiteral("printExtBuf"));
        printExtBuf->setGeometry(QRect(490, 100, 91, 32));
        printHeaderCheckBox = new QCheckBox(tab_c1);
        printHeaderCheckBox->setObjectName(QStringLiteral("printHeaderCheckBox"));
        printHeaderCheckBox->setGeometry(QRect(500, 130, 91, 20));
        payloadWriteText = new QLineEdit(tab_c1);
        payloadWriteText->setObjectName(QStringLiteral("payloadWriteText"));
        payloadWriteText->setGeometry(QRect(668, 70, 139, 21));
        label_25 = new QLabel(tab_c1);
        label_25->setObjectName(QStringLiteral("label_25"));
        label_25->setGeometry(QRect(670, 54, 61, 16));
        tabWidget_c->addTab(tab_c1, QString());
        tab_c2 = new QWidget();
        tab_c2->setObjectName(QStringLiteral("tab_c2"));
        plotI = new QCustomPlot(tab_c2);
        plotI->setObjectName(QStringLiteral("plotI"));
        plotI->setGeometry(QRect(0, 0, 930, 154));
        verticalScrollBarQ = new QScrollBar(tab_c2);
        verticalScrollBarQ->setObjectName(QStringLiteral("verticalScrollBarQ"));
        verticalScrollBarQ->setGeometry(QRect(928, 0, 16, 323));
        verticalScrollBarQ->setOrientation(Qt::Vertical);
        horizontalScrollBarQ = new QScrollBar(tab_c2);
        horizontalScrollBarQ->setObjectName(QStringLiteral("horizontalScrollBarQ"));
        horizontalScrollBarQ->setGeometry(QRect(0, 308, 929, 16));
        horizontalScrollBarQ->setOrientation(Qt::Horizontal);
        plotI2 = new QCustomPlot(tab_c2);
        plotI2->setObjectName(QStringLiteral("plotI2"));
        plotI2->setGeometry(QRect(0, 155, 930, 154));
        tabWidget_c->addTab(tab_c2, QString());
        tab_c3 = new QWidget();
        tab_c3->setObjectName(QStringLiteral("tab_c3"));
        plotQ = new QCustomPlot(tab_c3);
        plotQ->setObjectName(QStringLiteral("plotQ"));
        plotQ->setGeometry(QRect(0, 0, 930, 154));
        verticalScrollBarI = new QScrollBar(tab_c3);
        verticalScrollBarI->setObjectName(QStringLiteral("verticalScrollBarI"));
        verticalScrollBarI->setGeometry(QRect(928, 0, 16, 323));
        verticalScrollBarI->setOrientation(Qt::Vertical);
        horizontalScrollBarI = new QScrollBar(tab_c3);
        horizontalScrollBarI->setObjectName(QStringLiteral("horizontalScrollBarI"));
        horizontalScrollBarI->setGeometry(QRect(0, 308, 929, 16));
        horizontalScrollBarI->setOrientation(Qt::Horizontal);
        plotQ2 = new QCustomPlot(tab_c3);
        plotQ2->setObjectName(QStringLiteral("plotQ2"));
        plotQ2->setGeometry(QRect(0, 155, 930, 154));
        tabWidget_c->addTab(tab_c3, QString());
        tab_c5 = new QWidget();
        tab_c5->setObjectName(QStringLiteral("tab_c5"));
        plotFFTI = new QCustomPlot(tab_c5);
        plotFFTI->setObjectName(QStringLiteral("plotFFTI"));
        plotFFTI->setGeometry(QRect(0, 0, 930, 154));
        verticalScrollBarFFTI = new QScrollBar(tab_c5);
        verticalScrollBarFFTI->setObjectName(QStringLiteral("verticalScrollBarFFTI"));
        verticalScrollBarFFTI->setGeometry(QRect(928, 0, 16, 323));
        verticalScrollBarFFTI->setOrientation(Qt::Vertical);
        horizontalScrollBarFFTI = new QScrollBar(tab_c5);
        horizontalScrollBarFFTI->setObjectName(QStringLiteral("horizontalScrollBarFFTI"));
        horizontalScrollBarFFTI->setGeometry(QRect(0, 308, 929, 16));
        horizontalScrollBarFFTI->setOrientation(Qt::Horizontal);
        plotFFTI2 = new QCustomPlot(tab_c5);
        plotFFTI2->setObjectName(QStringLiteral("plotFFTI2"));
        plotFFTI2->setGeometry(QRect(0, 155, 930, 154));
        tabWidget_c->addTab(tab_c5, QString());
        tab_c6 = new QWidget();
        tab_c6->setObjectName(QStringLiteral("tab_c6"));
        plotFFTQ = new QCustomPlot(tab_c6);
        plotFFTQ->setObjectName(QStringLiteral("plotFFTQ"));
        plotFFTQ->setGeometry(QRect(0, 0, 930, 154));
        verticalScrollBarFFTQ = new QScrollBar(tab_c6);
        verticalScrollBarFFTQ->setObjectName(QStringLiteral("verticalScrollBarFFTQ"));
        verticalScrollBarFFTQ->setGeometry(QRect(928, 0, 16, 323));
        verticalScrollBarFFTQ->setOrientation(Qt::Vertical);
        horizontalScrollBarFFTQ = new QScrollBar(tab_c6);
        horizontalScrollBarFFTQ->setObjectName(QStringLiteral("horizontalScrollBarFFTQ"));
        horizontalScrollBarFFTQ->setGeometry(QRect(0, 308, 929, 16));
        horizontalScrollBarFFTQ->setOrientation(Qt::Horizontal);
        plotFFTQ2 = new QCustomPlot(tab_c6);
        plotFFTQ2->setObjectName(QStringLiteral("plotFFTQ2"));
        plotFFTQ2->setGeometry(QRect(0, 155, 930, 154));
        tabWidget_c->addTab(tab_c6, QString());
        tab_c4 = new QWidget();
        tab_c4->setObjectName(QStringLiteral("tab_c4"));
        plotC = new QCustomPlot(tab_c4);
        plotC->setObjectName(QStringLiteral("plotC"));
        plotC->setGeometry(QRect(0, 0, 930, 154));
        verticalScrollBarC = new QScrollBar(tab_c4);
        verticalScrollBarC->setObjectName(QStringLiteral("verticalScrollBarC"));
        verticalScrollBarC->setGeometry(QRect(928, 0, 16, 323));
        verticalScrollBarC->setOrientation(Qt::Vertical);
        horizontalScrollBarC = new QScrollBar(tab_c4);
        horizontalScrollBarC->setObjectName(QStringLiteral("horizontalScrollBarC"));
        horizontalScrollBarC->setGeometry(QRect(0, 308, 929, 16));
        horizontalScrollBarC->setOrientation(Qt::Horizontal);
        plotC2 = new QCustomPlot(tab_c4);
        plotC2->setObjectName(QStringLiteral("plotC2"));
        plotC2->setGeometry(QRect(0, 155, 930, 154));
        tabWidget_c->addTab(tab_c4, QString());
        tabWidget_b = new QTabWidget(groupBox);
        tabWidget_b->setObjectName(QStringLiteral("tabWidget_b"));
        tabWidget_b->setGeometry(QRect(468, 190, 497, 145));
        tab_2 = new QWidget();
        tab_2->setObjectName(QStringLiteral("tab_2"));
        recOutputFilename = new QLineEdit(tab_2);
        recOutputFilename->setObjectName(QStringLiteral("recOutputFilename"));
        recOutputFilename->setGeometry(QRect(14, 24, 119, 21));
        pktRecordCheckBox = new QCheckBox(tab_2);
        pktRecordCheckBox->setObjectName(QStringLiteral("pktRecordCheckBox"));
        pktRecordCheckBox->setGeometry(QRect(154, 6, 101, 20));
        pktRecordCheckBox->setChecked(true);
        label_22 = new QLabel(tab_2);
        label_22->setObjectName(QStringLiteral("label_22"));
        label_22->setGeometry(QRect(12, 60, 81, 16));
        writeLimit_spinBox = new QSpinBox(tab_2);
        writeLimit_spinBox->setObjectName(QStringLiteral("writeLimit_spinBox"));
        writeLimit_spinBox->setGeometry(QRect(302, 24, 61, 24));
        writeLimit_spinBox->setMaximum(999999);
        writeLimit_spinBox->setValue(1000);
        promiscModeCheckBox = new QCheckBox(tab_2);
        promiscModeCheckBox->setObjectName(QStringLiteral("promiscModeCheckBox"));
        promiscModeCheckBox->setGeometry(QRect(154, 52, 113, 20));
        recOutputDirectory = new QLineEdit(tab_2);
        recOutputDirectory->setObjectName(QStringLiteral("recOutputDirectory"));
        recOutputDirectory->setGeometry(QRect(12, 80, 291, 21));
        appendInterfaceCheckBox = new QCheckBox(tab_2);
        appendInterfaceCheckBox->setObjectName(QStringLiteral("appendInterfaceCheckBox"));
        appendInterfaceCheckBox->setGeometry(QRect(154, 28, 137, 20));
        appendInterfaceCheckBox->setChecked(true);
        label_24 = new QLabel(tab_2);
        label_24->setObjectName(QStringLiteral("label_24"));
        label_24->setGeometry(QRect(302, 4, 71, 16));
        label_23 = new QLabel(tab_2);
        label_23->setObjectName(QStringLiteral("label_23"));
        label_23->setGeometry(QRect(14, 4, 81, 16));
        decodeCounterCheckBox = new QCheckBox(tab_2);
        decodeCounterCheckBox->setObjectName(QStringLiteral("decodeCounterCheckBox"));
        decodeCounterCheckBox->setGeometry(QRect(366, 56, 109, 20));
        decodeCounterCheckBox->setChecked(true);
        tabWidget_b->addTab(tab_2, QString());
        tab = new QWidget();
        tab->setObjectName(QStringLiteral("tab"));
        injectReadCmd_radioButton = new QRadioButton(tab);
        buttonGroup_4 = new QButtonGroup(UDAR_Controller);
        buttonGroup_4->setObjectName(QStringLiteral("buttonGroup_4"));
        buttonGroup_4->addButton(injectReadCmd_radioButton);
        injectReadCmd_radioButton->setObjectName(QStringLiteral("injectReadCmd_radioButton"));
        injectReadCmd_radioButton->setGeometry(QRect(30, 36, 83, 20));
        injectReadCmd_radioButton->setChecked(false);
        injectWriteCmd_radioButton = new QRadioButton(tab);
        buttonGroup_4->addButton(injectWriteCmd_radioButton);
        injectWriteCmd_radioButton->setObjectName(QStringLiteral("injectWriteCmd_radioButton"));
        injectWriteCmd_radioButton->setGeometry(QRect(30, 10, 85, 20));
        injectWriteCmd_radioButton->setChecked(true);
        byteReorderCheckBox = new QCheckBox(tab);
        byteReorderCheckBox->setObjectName(QStringLiteral("byteReorderCheckBox"));
        byteReorderCheckBox->setGeometry(QRect(22, 90, 101, 20));
        adc_data_u_radioButton = new QRadioButton(tab);
        buttonGroup_5 = new QButtonGroup(UDAR_Controller);
        buttonGroup_5->setObjectName(QStringLiteral("buttonGroup_5"));
        buttonGroup_5->addButton(adc_data_u_radioButton);
        adc_data_u_radioButton->setObjectName(QStringLiteral("adc_data_u_radioButton"));
        adc_data_u_radioButton->setGeometry(QRect(348, 32, 21, 20));
        dac_data_u_radioButton = new QRadioButton(tab);
        buttonGroup_5->addButton(dac_data_u_radioButton);
        dac_data_u_radioButton->setObjectName(QStringLiteral("dac_data_u_radioButton"));
        dac_data_u_radioButton->setGeometry(QRect(348, 52, 17, 20));
        dac_data_u_radioButton->setChecked(true);
        adc_counter_u_radioButton = new QRadioButton(tab);
        buttonGroup_5->addButton(adc_counter_u_radioButton);
        adc_counter_u_radioButton->setObjectName(QStringLiteral("adc_counter_u_radioButton"));
        adc_counter_u_radioButton->setGeometry(QRect(348, 72, 21, 20));
        adc_counter_u_radioButton->setChecked(false);
        global_counter_u_radioButton = new QRadioButton(tab);
        buttonGroup_5->addButton(global_counter_u_radioButton);
        global_counter_u_radioButton->setObjectName(QStringLiteral("global_counter_u_radioButton"));
        global_counter_u_radioButton->setGeometry(QRect(348, 92, 21, 20));
        adc_data_l_radioButton = new QRadioButton(tab);
        buttonGroup_6 = new QButtonGroup(UDAR_Controller);
        buttonGroup_6->setObjectName(QStringLiteral("buttonGroup_6"));
        buttonGroup_6->addButton(adc_data_l_radioButton);
        adc_data_l_radioButton->setObjectName(QStringLiteral("adc_data_l_radioButton"));
        adc_data_l_radioButton->setGeometry(QRect(378, 32, 100, 20));
        adc_data_l_radioButton->setChecked(true);
        global_counter_l_radioButton = new QRadioButton(tab);
        buttonGroup_6->addButton(global_counter_l_radioButton);
        global_counter_l_radioButton->setObjectName(QStringLiteral("global_counter_l_radioButton"));
        global_counter_l_radioButton->setGeometry(QRect(376, 92, 100, 20));
        adc_counter_l_radioButton = new QRadioButton(tab);
        buttonGroup_6->addButton(adc_counter_l_radioButton);
        adc_counter_l_radioButton->setObjectName(QStringLiteral("adc_counter_l_radioButton"));
        adc_counter_l_radioButton->setGeometry(QRect(376, 72, 100, 20));
        dac_data_l_radioButton = new QRadioButton(tab);
        buttonGroup_6->addButton(dac_data_l_radioButton);
        dac_data_l_radioButton->setObjectName(QStringLiteral("dac_data_l_radioButton"));
        dac_data_l_radioButton->setGeometry(QRect(378, 52, 100, 20));
        label_36 = new QLabel(tab);
        label_36->setObjectName(QStringLiteral("label_36"));
        label_36->setGeometry(QRect(326, 0, 95, 16));
        label_37 = new QLabel(tab);
        label_37->setObjectName(QStringLiteral("label_37"));
        label_37->setGeometry(QRect(340, 18, 39, 16));
        label_38 = new QLabel(tab);
        label_38->setObjectName(QStringLiteral("label_38"));
        label_38->setGeometry(QRect(374, 18, 39, 16));
        tabWidget_b->addTab(tab, QString());
        tab_3 = new QWidget();
        tab_3->setObjectName(QStringLiteral("tab_3"));
        srcIpAddr = new QLineEdit(tab_3);
        srcIpAddr->setObjectName(QStringLiteral("srcIpAddr"));
        srcIpAddr->setGeometry(QRect(154, 60, 91, 21));
        destIpAddr = new QLineEdit(tab_3);
        destIpAddr->setObjectName(QStringLiteral("destIpAddr"));
        destIpAddr->setGeometry(QRect(154, 20, 91, 21));
        srcMacAddr = new QLineEdit(tab_3);
        srcMacAddr->setObjectName(QStringLiteral("srcMacAddr"));
        srcMacAddr->setGeometry(QRect(38, 60, 105, 21));
        label_2 = new QLabel(tab_3);
        label_2->setObjectName(QStringLiteral("label_2"));
        label_2->setGeometry(QRect(38, 42, 71, 21));
        label = new QLabel(tab_3);
        label->setObjectName(QStringLiteral("label"));
        label->setGeometry(QRect(38, 2, 101, 20));
        destMacAddr = new QLineEdit(tab_3);
        destMacAddr->setObjectName(QStringLiteral("destMacAddr"));
        destMacAddr->setGeometry(QRect(38, 20, 105, 21));
        label_4 = new QLabel(tab_3);
        label_4->setObjectName(QStringLiteral("label_4"));
        label_4->setGeometry(QRect(152, 44, 59, 16));
        label_3 = new QLabel(tab_3);
        label_3->setObjectName(QStringLiteral("label_3"));
        label_3->setGeometry(QRect(156, 4, 59, 16));
        tabWidget_b->addTab(tab_3, QString());
        tab_b2 = new QWidget();
        tab_b2->setObjectName(QStringLiteral("tab_b2"));
        inputPcapFilename = new QLineEdit(tab_b2);
        inputPcapFilename->setObjectName(QStringLiteral("inputPcapFilename"));
        inputPcapFilename->setGeometry(QRect(14, 28, 303, 21));
        outputPcapFilename = new QLineEdit(tab_b2);
        outputPcapFilename->setObjectName(QStringLiteral("outputPcapFilename"));
        outputPcapFilename->setGeometry(QRect(14, 78, 121, 21));
        outputDirectory = new QLineEdit(tab_b2);
        outputDirectory->setObjectName(QStringLiteral("outputDirectory"));
        outputDirectory->setGeometry(QRect(164, 78, 181, 21));
        readPcapButton = new QPushButton(tab_b2);
        readPcapButton->setObjectName(QStringLiteral("readPcapButton"));
        readPcapButton->setGeometry(QRect(338, 22, 113, 32));
        label_19 = new QLabel(tab_b2);
        label_19->setObjectName(QStringLiteral("label_19"));
        label_19->setGeometry(QRect(24, 8, 101, 16));
        label_21 = new QLabel(tab_b2);
        label_21->setObjectName(QStringLiteral("label_21"));
        label_21->setGeometry(QRect(164, 58, 81, 16));
        label_20 = new QLabel(tab_b2);
        label_20->setObjectName(QStringLiteral("label_20"));
        label_20->setGeometry(QRect(14, 58, 81, 16));
        tabWidget_b->addTab(tab_b2, QString());
        tab_b3 = new QWidget();
        tab_b3->setObjectName(QStringLiteral("tab_b3"));
        tabWidget_b->addTab(tab_b3, QString());
        label_5 = new QLabel(groupBox);
        label_5->setObjectName(QStringLiteral("label_5"));
        label_5->setGeometry(QRect(8, 192, 81, 16));
        networkInterfaces = new QComboBox(groupBox);
        networkInterfaces->setObjectName(QStringLiteral("networkInterfaces"));
        networkInterfaces->setGeometry(QRect(8, 212, 109, 26));
        statusTranscript = new QTextEdit(groupBox);
        statusTranscript->setObjectName(QStringLiteral("statusTranscript"));
        statusTranscript->setGeometry(QRect(12, 252, 321, 75));
        statusTranscript->setStyleSheet(QStringLiteral("font: 10pt \"Menlo\";"));
        killThread = new QPushButton(groupBox);
        killThread->setObjectName(QStringLiteral("killThread"));
        killThread->setGeometry(QRect(346, 250, 94, 32));
        listenButton = new QPushButton(groupBox);
        listenButton->setObjectName(QStringLiteral("listenButton"));
        listenButton->setGeometry(QRect(128, 206, 94, 32));
        writeButton = new QPushButton(groupBox);
        writeButton->setObjectName(QStringLiteral("writeButton"));
        writeButton->setGeometry(QRect(224, 206, 94, 32));
        injectFmc150_radioButton = new QRadioButton(groupBox);
        buttonGroup_3 = new QButtonGroup(UDAR_Controller);
        buttonGroup_3->setObjectName(QStringLiteral("buttonGroup_3"));
        buttonGroup_3->addButton(injectFmc150_radioButton);
        injectFmc150_radioButton->setObjectName(QStringLiteral("injectFmc150_radioButton"));
        injectFmc150_radioButton->setGeometry(QRect(324, 216, 78, 20));
        injectFmc150_radioButton->setChecked(false);
        injectChirp_radioButton = new QRadioButton(groupBox);
        buttonGroup_3->addButton(injectChirp_radioButton);
        injectChirp_radioButton->setObjectName(QStringLiteral("injectChirp_radioButton"));
        injectChirp_radioButton->setGeometry(QRect(324, 194, 78, 20));
        injectChirp_radioButton->setChecked(true);
        plotOutputButton = new QPushButton(groupBox);
        plotOutputButton->setObjectName(QStringLiteral("plotOutputButton"));
        plotOutputButton->setGeometry(QRect(346, 288, 107, 32));
        UDAR_Controller->setCentralWidget(centralWidget);
        menuBar = new QMenuBar(UDAR_Controller);
        menuBar->setObjectName(QStringLiteral("menuBar"));
        menuBar->setGeometry(QRect(0, 0, 992, 22));
        menuUDAR_GUI = new QMenu(menuBar);
        menuUDAR_GUI->setObjectName(QStringLiteral("menuUDAR_GUI"));
        UDAR_Controller->setMenuBar(menuBar);
        mainToolBar = new QToolBar(UDAR_Controller);
        mainToolBar->setObjectName(QStringLiteral("mainToolBar"));
        UDAR_Controller->addToolBar(Qt::TopToolBarArea, mainToolBar);
        statusBar = new QStatusBar(UDAR_Controller);
        statusBar->setObjectName(QStringLiteral("statusBar"));
        UDAR_Controller->setStatusBar(statusBar);

        menuBar->addAction(menuUDAR_GUI->menuAction());

        retranslateUi(UDAR_Controller);

        tabWidget_a->setCurrentIndex(0);
        tabWidget_c->setCurrentIndex(1);
        tabWidget_b->setCurrentIndex(1);


        QMetaObject::connectSlotsByName(UDAR_Controller);
    } // setupUi

    void retranslateUi(QMainWindow *UDAR_Controller)
    {
        UDAR_Controller->setWindowTitle(QApplication::translate("UDAR_Controller", "UDAR_Controller", 0));
        groupBox->setTitle(QApplication::translate("UDAR_Controller", "Underground Radar Control", 0));
        label_6->setText(QApplication::translate("UDAR_Controller", "Chirp PRF (s)", 0));
        label_8->setText(QApplication::translate("UDAR_Controller", "Min Freq. (MHz)", 0));
        label_9->setText(QApplication::translate("UDAR_Controller", "ADC Sample Cycles", 0));
        label_7->setText(QApplication::translate("UDAR_Controller", "Chirp Slope (MHz/us)", 0));
        label_13->setText(QApplication::translate("UDAR_Controller", "Chirp Time (us)", 0));
        label_12->setText(QApplication::translate("UDAR_Controller", "Bandwidth (MHz)", 0));
        label_14->setText(QApplication::translate("UDAR_Controller", "Chirp Tuning Word", 0));
        label_15->setText(QApplication::translate("UDAR_Controller", "Num. Samples", 0));
        label_16->setText(QApplication::translate("UDAR_Controller", "Phase Accum. Len. ", 0));
        label_17->setText(QApplication::translate("UDAR_Controller", "Clock Freq. (MHz)", 0));
        label_18->setText(QApplication::translate("UDAR_Controller", "Freq. Offset Word", 0));
        chirpParamsGenButton->setText(QApplication::translate("UDAR_Controller", "Calculate Params", 0));
        chirpParamsResetButton->setText(QApplication::translate("UDAR_Controller", "Reset Defaults", 0));
        dacLoopback_checkBox->setText(QApplication::translate("UDAR_Controller", "DAC Loopback Test", 0));
        tabWidget_a->setTabText(tabWidget_a->indexOf(tab_a1), QApplication::translate("UDAR_Controller", "Chirp DDS", 0));
        label_26->setText(QApplication::translate("UDAR_Controller", "Register Address", 0));
        label_27->setText(QApplication::translate("UDAR_Controller", "Register Data", 0));
        label_28->setText(QApplication::translate("UDAR_Controller", "Clk iDelay", 0));
        label_29->setText(QApplication::translate("UDAR_Controller", "Ch. A Delay", 0));
        label_30->setText(QApplication::translate("UDAR_Controller", "Ch. B Delay", 0));
        label_31->setText(QApplication::translate("UDAR_Controller", "RW", 0));
        label_32->setText(QApplication::translate("UDAR_Controller", "CDCE72010", 0));
        label_33->setText(QApplication::translate("UDAR_Controller", "ADS62P49", 0));
        label_34->setText(QApplication::translate("UDAR_Controller", "DAC3283", 0));
        label_35->setText(QApplication::translate("UDAR_Controller", "AMC7823", 0));
        fmc150_read_radioButton->setText(QApplication::translate("UDAR_Controller", "Read", 0));
        fmc150_write_radioButton->setText(QApplication::translate("UDAR_Controller", "Write", 0));
        fmc150_CDC_radioButton->setText(QApplication::translate("UDAR_Controller", "CDCE72010", 0));
        fmc150_ADS_radioButton->setText(QApplication::translate("UDAR_Controller", "ADS62P49", 0));
        fmc150_DAC_radioButton->setText(QApplication::translate("UDAR_Controller", "DAC3283", 0));
        fmc150_AMC_radioButton->setText(QApplication::translate("UDAR_Controller", "AMC7823", 0));
        tabWidget_a->setTabText(tabWidget_a->indexOf(tab_a2), QApplication::translate("UDAR_Controller", "DAC/ADC", 0));
        tabWidget_a->setTabText(tabWidget_a->indexOf(tab_a3), QApplication::translate("UDAR_Controller", "...", 0));
        getThreadStatus->setText(QApplication::translate("UDAR_Controller", "Thread Status", 0));
        testButton->setText(QApplication::translate("UDAR_Controller", "Inject Test Packet", 0));
        label_10->setText(QApplication::translate("UDAR_Controller", "Address", 0));
        label_11->setText(QApplication::translate("UDAR_Controller", "Command", 0));
        addressWriteText->setText(QApplication::translate("UDAR_Controller", "0x00000000", 0));
        commandWriteText->setText(QApplication::translate("UDAR_Controller", "w", 0));
        printExtBuf->setText(QApplication::translate("UDAR_Controller", "Print Packet", 0));
        printHeaderCheckBox->setText(QApplication::translate("UDAR_Controller", "Print header", 0));
        payloadWriteText->setText(QApplication::translate("UDAR_Controller", "0xfeedbeef", 0));
        label_25->setText(QApplication::translate("UDAR_Controller", "Payload", 0));
        tabWidget_c->setTabText(tabWidget_c->indexOf(tab_c1), QApplication::translate("UDAR_Controller", "Transcript", 0));
        tabWidget_c->setTabText(tabWidget_c->indexOf(tab_c2), QApplication::translate("UDAR_Controller", "I Channel", 0));
        tabWidget_c->setTabText(tabWidget_c->indexOf(tab_c3), QApplication::translate("UDAR_Controller", "Q Channel", 0));
        tabWidget_c->setTabText(tabWidget_c->indexOf(tab_c5), QApplication::translate("UDAR_Controller", "I FFT", 0));
        tabWidget_c->setTabText(tabWidget_c->indexOf(tab_c6), QApplication::translate("UDAR_Controller", "Q FFT", 0));
        tabWidget_c->setTabText(tabWidget_c->indexOf(tab_c4), QApplication::translate("UDAR_Controller", "Counter", 0));
        recOutputFilename->setText(QApplication::translate("UDAR_Controller", "dataout.bin", 0));
        pktRecordCheckBox->setText(QApplication::translate("UDAR_Controller", "Save to file", 0));
        label_22->setText(QApplication::translate("UDAR_Controller", "Output Directory", 0));
        promiscModeCheckBox->setText(QApplication::translate("UDAR_Controller", "Promiscuous mode", 0));
        recOutputDirectory->setText(QApplication::translate("UDAR_Controller", "/Users/sam/outputs/", 0));
        appendInterfaceCheckBox->setText(QApplication::translate("UDAR_Controller", "Append interface name", 0));
        label_24->setText(QApplication::translate("UDAR_Controller", "Write Limit", 0));
        label_23->setText(QApplication::translate("UDAR_Controller", "Output Filename", 0));
        decodeCounterCheckBox->setText(QApplication::translate("UDAR_Controller", "Decode Counter", 0));
        tabWidget_b->setTabText(tabWidget_b->indexOf(tab_2), QApplication::translate("UDAR_Controller", "RX", 0));
        injectReadCmd_radioButton->setText(QApplication::translate("UDAR_Controller", "Read Config", 0));
        injectWriteCmd_radioButton->setText(QApplication::translate("UDAR_Controller", "Write Config", 0));
        byteReorderCheckBox->setText(QApplication::translate("UDAR_Controller", "Reorder Bytes", 0));
        adc_data_u_radioButton->setText(QApplication::translate("UDAR_Controller", "adc output", 0));
        dac_data_u_radioButton->setText(QApplication::translate("UDAR_Controller", "dac input", 0));
        adc_counter_u_radioButton->setText(QApplication::translate("UDAR_Controller", "adc counter", 0));
        global_counter_u_radioButton->setText(QApplication::translate("UDAR_Controller", "global counter", 0));
        adc_data_l_radioButton->setText(QApplication::translate("UDAR_Controller", "adc output", 0));
        global_counter_l_radioButton->setText(QApplication::translate("UDAR_Controller", "global counter", 0));
        adc_counter_l_radioButton->setText(QApplication::translate("UDAR_Controller", "adc counter", 0));
        dac_data_l_radioButton->setText(QApplication::translate("UDAR_Controller", "dac input", 0));
        label_36->setText(QApplication::translate("UDAR_Controller", "Data Word Select:", 0));
        label_37->setText(QApplication::translate("UDAR_Controller", "Upper", 0));
        label_38->setText(QApplication::translate("UDAR_Controller", "Lower", 0));
        tabWidget_b->setTabText(tabWidget_b->indexOf(tab), QApplication::translate("UDAR_Controller", "TX", 0));
        label_2->setText(QApplication::translate("UDAR_Controller", "Source Mac", 0));
        label->setText(QApplication::translate("UDAR_Controller", "Dest Mac", 0));
        label_4->setText(QApplication::translate("UDAR_Controller", "Source IP", 0));
        label_3->setText(QApplication::translate("UDAR_Controller", "Dest IP", 0));
        tabWidget_b->setTabText(tabWidget_b->indexOf(tab_3), QApplication::translate("UDAR_Controller", "Network", 0));
        inputPcapFilename->setText(QApplication::translate("UDAR_Controller", "/Users/sam/WiresharkCaptures/adc_chirp.pcapng", 0));
        outputPcapFilename->setText(QApplication::translate("UDAR_Controller", "adc_chirp", 0));
        outputDirectory->setText(QApplication::translate("UDAR_Controller", "/Users/sam/outputs/", 0));
        readPcapButton->setText(QApplication::translate("UDAR_Controller", "Read Pcap File", 0));
        label_19->setText(QApplication::translate("UDAR_Controller", "Input Pcap Filename", 0));
        label_21->setText(QApplication::translate("UDAR_Controller", "Output Directory", 0));
        label_20->setText(QApplication::translate("UDAR_Controller", "Output Filename", 0));
        tabWidget_b->setTabText(tabWidget_b->indexOf(tab_b2), QApplication::translate("UDAR_Controller", "Pcap", 0));
        tabWidget_b->setTabText(tabWidget_b->indexOf(tab_b3), QApplication::translate("UDAR_Controller", "...", 0));
        label_5->setText(QApplication::translate("UDAR_Controller", "Interface", 0));
        killThread->setText(QApplication::translate("UDAR_Controller", "Kill Threads", 0));
        listenButton->setText(QApplication::translate("UDAR_Controller", "Listen", 0));
        writeButton->setText(QApplication::translate("UDAR_Controller", "Send Config", 0));
        injectFmc150_radioButton->setText(QApplication::translate("UDAR_Controller", "DAC/ADC", 0));
        injectChirp_radioButton->setText(QApplication::translate("UDAR_Controller", "Chirp DDS", 0));
        plotOutputButton->setText(QApplication::translate("UDAR_Controller", "Plot Data", 0));
        menuUDAR_GUI->setTitle(QApplication::translate("UDAR_Controller", "UDAR GUI", 0));
    } // retranslateUi

};

namespace Ui {
    class UDAR_Controller: public Ui_UDAR_Controller {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_UDAR_CONTROLLER_H
